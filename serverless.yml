# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: token-updater
# app and org for use with dashboard.serverless.com
app: token-updater
org: kadefimoney

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  environment:
    TOKEN_INFO_TABLE: token-info-table
    ARKADE_TABLE: arkade-collection
    PGHOST: ${param:PGHOST}
    PGUSER: ${param:PGUSER}
    PGDATABASE: ${param:PGDATABASE}
    PGPASSWORD: ${param:PGPASSWORD}
    PGPORT: 5432
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

functions:
  updatePrice:
    handler: handler.updatePriceHandler
    events:
      - schedule:
          rate: rate(1 minute)
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
    timeout: 30
  updateToken:
    handler: handler.updateTokenHandler
    events:
      - schedule:
          rate: rate(1 minute)
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  candleUpdateKaddex:
    handler: handler.candleUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: usd
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  candleUpdateKDSwap:
    handler: handler.candleUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: usd
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  candleUpdateKaddexKDA:
    handler: handler.candleUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: kda
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  candleUpdateKDSwapKDA:
    handler: handler.candleUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: kda
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  candleUpdateAll:
    handler: handler.candleUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: usd
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: usd
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  candleUpdateAllKDA:
    handler: handler.candleUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: kda
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: kda
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  materialViewUpdate:
    handler: handler.materialViewUpdateHandler
    events:
      - schedule:
          rate: rate(30 minute)
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
    timeout: 30
  barsViewUpdate:
    handler: handler.barsViewUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: false
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
    timeout: 60
  hourBarsUpdateKDSwap:
    handler: handler.hourBarsUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: usd
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  hourBarsUpdateKaddex:
    handler: handler.hourBarsUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: usd
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  hourBarsUpdateBoth:
    handler: handler.hourBarsUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: usd
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: usd
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  hourBarsUpdateKDSwapKDA:
    handler: handler.hourBarsUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: kda
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  hourBarsUpdateKaddexKDA:
    handler: handler.hourBarsUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: kda
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  hourBarsUpdateBothKDA:
    handler: handler.hourBarsUpdateHandler
    events:
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kaddex
            base: kda
      - schedule:
          rate: rate(1 minute)
          input:
            dex: kdswap
            base: kda
    environment:
      PGHOST: ${param:PGHOST}
      PGUSER: ${param:PGUSER}
      PGDATABASE: ${param:PGDATABASE}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: 5432
  arkadeCollectionUpdateHandler:
    handler: handler.arkadeCollectionUpdateHandler
    events:
      - schedule:
          rate: rate(30 minutes)
    environment:
      ARKADE_TABLE: arkade-collection
  tokenInfoUpdateHandler:
    handler: handler.tokenInfoUpdateHandler
    events:
      - schedule:
          rate: rate(10 minutes)
    environment:
      TOKEN_INFO_TABLE: token-info-table

resources:
  Resources:
    cacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: arkade-collection
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        BillingMode: PAY_PER_REQUEST
    tokenInfoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: token-info-table
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        BillingMode: PAY_PER_REQUEST